# -*- coding: utf-8 -*-
"""Live Class - Python 102.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_NWcclaEIIQulZVXoVlbyPFQxReuVbPE

# **Review Basic Python**
"""

x = 100
print(x)

x = x + 20
print(x)

x += 50 ## x = x + 50
print(x)

x -= 70
print(x)

x *= 5
x /= 2
print(x)

greeting = "Hello"

greeting + " Toy!"

greeting * 5

# length 
len("Hello World")

# index in python starts with zero
word = "Hello World"
word[0:5]

sentence = "A duck walks into a bar...."

len(sentence)

tokens = sentence.split(" ")

print(tokens)

sentence = " ".join(tokens)

sentence

"""# **Data Structures**

- list [] : mutable
- tuple () : immutable
- dictionary {} : mutable
- set
"""

# list
friends = ["David", "Mary", "John", "Kevin", "Richard"]

friends.append("Anna")
print(friends)

friends = friends + ["Toy", "Walker"]
print(friends)

name = "Marry"

if name in friends:
    print(f"{name} is in our list!")
else:
    print(f"Not found {name}")

# for loop
friends_upper = [] # empty list

for friend in friends:
    friends_upper.append(friend.upper())

print(friends_upper)

# list comprehension
friends_upper_v2 = [friend.upper() for friend in friends]
print(friends_upper_v2)

# update value in list (mutable)
friends[6] = "Pirlo"
friends

# string is immutable
text = "Python"
text = "T" + text[1:]
text

text = "Hello Worlds" ## -> Hello Mars
print(text[0:6] + 'Mars')

# tuple - immutable object, work like list
scores = (56, 65, 95, 86)

print(scores[0])
print(scores[1])
print(scores[2])
print(scores[3])
print(scores[1:3])

A, B, C, D = scores # tuple assignment
print(A)
print(D)

# dictionary key-value pairs
# mutable + unordered
cars = {
    "brand": "Mazda", 
    "model": "Mazda 2", 
    "year": 2016, 
    "doors": 5,
    "accessories": ["Bose audio", "Light", "Skirt"]
}

print(cars)

cars.keys()

cars.values()

cars.items()

"model" in cars

# get information from dictionary
cars['brand']

# a real-world dictionary
customers = {
    "name": "David",
    "age": 35,
    "location": "London",
    "movie_lover": True,
    "movie_top_three": ['Avengers', 'Thor', 'Tenet']
}

customers

# create new key
customers['spending'] = 3500
customers

# update value
customers['spending'] += 4200
customers

customers

print(customers['movie_top_three'][0])
print(customers['movie_top_three'][1])
print(customers['movie_top_three'][2])

## nested dictionary
## schemaless
customers = {
    "ID001": {
        "name": "David",
        "age": 35,
        "location": "London",
        "movie_lover": True,
        "movie_top_three": ['Avengers', 'Thor', 'Tenet'],
        "mobile_operator": "TRUEMOVE"
    },
    "ID002": {
        "name": "Anna",
        "age": 28,
        "location": "Seoul",
        "movie_lover": True,
        "movie_top_three": ['The Dark Knight', 'Justice League', 'Spider Man'],
        "favourite_food": "Tomyum Goong"
    },
    "ID003": {
        "name": "Takeshi",
        "age": 26,
        "location": "Tokyo",
        "movie_lover": False,
        "movie_top_three": []
    }
}

customers

customers['ID002']['favourite_food']

'mobile_operator' in customers['ID002']

"""# **Control Flow**

- if
- for
- while
"""

# menu my food
days = ['weekday', 'weekend']
times = ['breakfast', 'dinner']

day = "weekday"
time = "breakfast"

if day == "weekday" and time == "breakfast":
    print("My menu is banana.")
elif day == "weekday" and time == "dinner":
    print("My menu is pizza.")
elif day == "weekend" and time == "breakfast":
    print("My menu is milk and bread.")
else:
    print("I can eat anything")

# menu my food
days = ['weekday', 'weekend']
times = ['breakfast', 'dinner']
menus = ['banana', 'pizza', 'milk and bread']

# input
day = input("Today is weekday or weekend? ")
time = input("breakfast or dinner? ")

# program
if day == days[0] and time == times[0]:
    print(f"My menu is {menus[0]}")
elif day == days[0] and time == times[1]:
    print(f"My menu is {menus[1]}")
elif day == days[1] and time == times[0]:
    print(f"My menu is {menus[2]}")
else:
    print("I can eat anything")

# for loop
for friend in friends:
    print("Hello " + friend)

# while loop
count = 0 
while count < 10:
    print("Hello")
    # update count variable
    count += 1

## initial values
status = True
count = 0

## while loop
while status:
    print("Hello World")
    count += 1
    if count > 10:
        status = False



"""# **Function**

Reusable piece of code
"""

def my_menu():
    # menu my food
    days = ['weekday', 'weekend']
    times = ['breakfast', 'dinner']
    menus = ['banana', 'pizza', 'milk and bread']

    # input
    day = input("Today is weekday or weekend? ")
    time = input("breakfast or dinner? ")

    # program
    if day == days[0] and time == times[0]:
        print(f"My menu is {menus[0]}")
    elif day == days[0] and time == times[1]:
        print(f"My menu is {menus[1]}")
    elif day == days[1] and time == times[0]:
        print(f"My menu is {menus[2]}")
    else:
        print("I can eat anything")

my_menu()

